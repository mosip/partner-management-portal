{
    "dashboard": {
        "welcomeMsg": "Welcome {{firstName}} {{lastName}}",
        "partnerTypeRequest": "Partner Type Request",
        "partnerTypeRequestDesc": "Request for Partner Type.",
        "organisationUsers": "Organisation Users",
        "organisationUsersDesc": "Approve or reject new user registration requests from same organisation.",
        "partnerCertificate": "Partner Certificate",
        "partnerCertificateDesc": "Certificate upload, re-upload, download and view certificate details.",
        "policies": "Policies",
        "policiesDesc": "Request and Manage your policies.",
        "authenticationServices": "Authentication Services",
        "authenticationServicesDesc": "Request OIDC Client creation / API key generation for eSignet and API key based authentications",
        "userRegistrationError": "Unable to register user. Try login again!",
        "verifyEmailError": "Error during user's email verification. Try login again!"
    },
    "header": {
        "partnerProfile": "Partner Profile",
        "changePassword": "Change Password",
        "logout": "Logout"
    },
    "footer": {
        "allRightsReserved": "All rights reserved.",
        "documentation": "Documentation",
        "mosipCommunity": "MOSIP Community",
        "contactUs": "Contact Us"
    },
    "selectPolicyPopup": {
        "title": "Select Policy Group",
        "description": "Select policy group applicable to your organisation to proceed with enrolled partner type flow. Please ensure you go through the policy group description to confirm the policy group. After your selection is saved, you will not be able to modify the policy group again. Only one policy group is allowed per partner ID.",
        "partnerTypeLabel": "Partner Type",
        "policyGroup": "Policy Group",
        "policyGroupError": "Unable to fetch any policy groups. Contact the administrator.",
        "submit": "Submit",
        "viewLess": "View Less",
        "viewMore": "View More"
    },
    "loading": "Loading",
    "partnerCertificatesList": {
        "partnerCertificate": "Partner Certificate",
        "noPartnerTypesAreMapped": "No partner types are mapped to your user id",
        "uploadPartnerCertificate": "Please upload partner certificate here",
        "certificateFormatMsg": "Only .cer or .pem certificate formats are allowed for upload",
        "download": "Download",
        "originalCertificate": "Original Certificate",
        "mosipSignedCertificate": "MOSIP Signed Certificate",
        "reUpload": "Re-Upload",
        "upload": "Upload",
        "partnerType": "Partner Type",
        "expiryDate": "Expiry Date",
        "timeOfUpload": "Time of Upload",
        "errorMsgForOriginalCertificate": "This feature is under development.",
        "errorWhileDownloadingCertificate": "There is some error in fetching the mosip signed certificate. Try again later!",
        "errorInCertificateList": "There is some error in fetching the certificates. Try again later!"
    },
    "uploadCertificate": {
        "uploadPartnerCertificate": "Upload Partner Certificate",
        "reUploadPartnerCertificate": "Re-Upload Partner Certificate",
        "selectFieldsMsg": "Please select the fields and upload certificate.",
        "partnerTypeLabel": "Partner Type",
        "partnerDomainType": "Partner Domain Type",
        "selectingFile": "Selecting the file...",
        "cancel": "Cancel",
        "selectCertificate": "Please tap to select the certificate",
        "certificateFormat": "Only .cer or .pem certificate formats are allowed for upload",
        "remove": "Remove",
        "close": "Close",
        "submit": "Submit",
        "successMsg": "Partner certificate for {{partnerType}} is uploaded successfully.",
        "lastcertificateUploadDate": "Last certificate was uploaded on {{date}}",
        "fileUploadError": "Please select a file with .cer or .pem extension.",
        "unableToUploadCertificate": "Unable to upload partner certificate",
        "errorWhileUploadingCertificate": "There is some error in uploading the certificate. Try again later!"
    },
    "partnerTypes": {
        "deviceProvider": "Device Provider",
        "ftmProvider": "FTM Provider",
        "authPartner": "Authentication Partner",
        "credentialPartner": "Credential Partner",
        "onlineVerficationPartner": "Online Verification Partner",
        "abisPartner": "ABIS Partner",
        "mispPartner": "MISP Partner",
        "sdkPartner": "SDK Partner",
        "printPartner": "Print Partner",
        "internalPartner": "Internal Partner",
        "manualAdjudication": "Manual Adjudication"
    },
    "statusCodes": {
        "approved": "Approved",
        "inProgress": "Pending For Approval",
        "rejected": "Rejected",
        "deactivated": "Deactivated"
    },
    "policies": {
        "policies": "Policies",
        "requestPolicyBtn": "Request Policy",
        "listOfPolicies": "List of Policy Requests",
        "filterBtn": "Filter",
        "partnerId": "Partner ID",
        "partnerType": "Partner Type",
        "policyGroup": "Policy Group",
        "policyName": "Policy Name",
        "createdDate": "Created Date",
        "status": "Status",
        "action": "Action",
        "view": "View",
        "selectPartnerId": "Select Partner ID",
        "selectPartnerType": "Select Partner Type",
        "selectPolicyGroup": "Select Policy Group",
        "selectPolicyName": "Select Policy Name",
        "selectStatus": "Select Status",
        "itemsPerPage": "Items per Page",
        "errorInPoliciesList": "There is some error in fetching the policies. Try again later!"
    },
    "viewPolicyDetails": {
        "viewPolicyDetails": "View Policy Details",
        "policySection": "Policy Section",
        "policyName": "Policy Name",
        "partnerId": "Partner ID",
        "partnerIdName": "Partner ID Name",
        "partnerType": "Partner Type",
        "policyGroup": "Policy Group",
        "policyGroupDescription": "Policy Group Description",
        "policyNameDescription": "Policy Name Description",
        "comments": "Comments",
        "adminComments": "Admin Comments",
        "partnerComments" : "Partner's Comments",
        "back": "Back"
    },
    "requestPolicy": {
        "requestPolicy": "Request a Policy",
        "policies": "Policies",
        "mandatoryFieldsMsg1": "All fields marked with",
        "mandatoryFieldsMsg2": "are mandatory.",
        "partnerId": "Partner ID",
        "partnerType": "Partner Type",
        "policyGroup": "Policy Group",
        "policyName": "Policy Name",
        "selectPartnerId": "Select Partner ID",
        "selectPolicyName": "Select policy name applicable to your organisation",
        "comments": "Comments",
        "commentBoxDesc": "Mention the purpose of requesting the policy",
        "clearForm": "Clear Form",
        "cancel": "Cancel",
        "submit": "Submit",
        "errorInResponse": "There is some error in fetching the details for all approved policy groups. Try again later"
    },
    "commons": {
        "home": "Home",
        "search": "Search"
    },
    "serverError": {
        "PMS_COR_001": "Missing Input Parameter",
        "PMS_PRT_002": " Policy group does not exist",
        "PMS_PRT_010": " Partner Type does not exist",
        "PMS_PRT_310": " Invalid column received : %s",
        "PMS_PRT_313": " Invalid pagination value received pagestart:%d and pagefetch:%d",
        "PMS_PRT_312": " Filter type is missing",
        "PMS_PRT_311": " Column is missing in request",
        "PMS_PRT_314": " Missing sort field or sort type values",
        "PMS_PRT_315": " Invalid fromValue or toValue",
        "PMS_PRT_356": " Pagination cannot be null",
        "PMS_PRT_358": " Sort type %s is not supported",
        "PMS_PRT_359": " Error occured while sorting",
        "PMS_PRT_357": " Invalid sort field %s",
        "KER_PRT_390": " Invalid filter value",
        "PMS_PRT_001": "  A Partner is already registered with the same Name",
        "PMS_PRT_051": " A Partner is already registered with the same Id",
        "PMS_PRT_052": "PartnerId max length should be ",
        "PMS_ATH_053": " IO Exception occured while passing paging request",
        "PMS_ATH_054": " User not found",
        "PMS_ATH_500": " Server error occurred,Please check the logs ",
        "PMS_PRT_061": "Partner policy mapping not exists.",
        "PMS_PRT_062": "Partner api key request is approved already. Cann't add extractors now.",
        "PMS_PRT_063": "Biometric extractors can be added only for:",
        "PMS_PRT_064": "No details found",
        "PMS_PRT_070": "Credential mapping allowed only for :",
        "PMS_PRT_071": "Error occured while parsing policy string to json object",
        "PMS_PRT_072": "Given credential type is not allowed. Allowed credential types : ",
        "PMS_PRT_073": "Policy not exists.",
        "PMS_PRT_074": "User exists with same email",
        "PMS_PRT_005": "Partner does not exist",
        "PMS_PRT_006": "No api key req exist",
        "PMS_PRT_105": "Partner API KEY is not Created",
        "PMS_PRT_011": " Email is already exists.",
        "PMS_PRT_012": " Invalid emailId.",
        "PMS_PRT_013": " Invalid mobile number.Length should be less than .",
        "PMS_ATH_401": "Authentication Failed",
        "PMS_PRT_106": "APIKeyReqID status is In_progress",
        "PMS_KKS_001": " API not accessible  ",
        "PMS_PRT_107": "Responese from the api is null",
        "PMS_PRT_500": "Unable to process the request.",
        "PMS_PMP_016": "Partner is not active.",
        "PMS_PRT_098": "Given policy under partner's policy group not exists.",
        "PMS_PMP_019": "Policy is not active.",
        "PMS_PMP_023": "Policy group is not active.",
        "PMS_DTS_001": "  DataShare response is null",
        "PMS_PRT_045": "Error occured while parsing P7B certificate data",
        "PMS_PRT_046": "Error occured while extracting the leaf cert.",
        "PMS_PRT_047": "Partner is not mapped to policy group",
        "PMS_PRT_048": "policy group mapping is not required for given partner",
        "PMS_PRT_049": "policy group mapping exists for given partner.",
        "PMS_PRT_050": "Policy group cannot be updated for approved partner",
        "PMS_PRT_054": "Policy group not mapped for given partner",
        "PMS_PRT_055": "User not authorized.",
        "PMS_PM_034": " Policy request already approved.",
        "PMS_PM_035": " Policy request already rejected.",
        "PMS_PM_045": " Status should be either Approved or Rejected",
        "PMS_PM_051": " Extractors are not present. Please add extractors.",
        "PMS_PM_058": " Status should be either Active or De_Active",
        "PMS_PMP_010": "Policy does not belong to the Policy Group of the Partner Manger",
        "PMS_PMP_015": "No Partner api key requests for the Policy Group",
        "PMS_PMP_007": "Partner api key does not exist",
        "PMS_PMP_011": "Partner api key does not exist",
        "PMS_PMP_009": " For given partner and apikey mapping not exists.",
        "PMS_PMP_013": "Partner does not exist",
        "PMS_PMP_005": "Partner ID does not exist",
        "PMS_PMP_017": "Partner is not mapped to any policy.",
        "PMS_PMP_020": "MISP license key not exists.",
        "PMS_PMP_021": "MISP license key is expired.",
        "PMS_PMP_022": "Policy not exists.",
        "PMS_PMP_024": "Policy file is corrupted.",
        "PMS_PMP_025": "License key of MISP is blocked",
        "PMS_PMP_50": "Given apikey,partner and policy mapping not exists.",
        "PMS_PMP_51": "Given policy is not belongs to partner's policy group",
        "PMS_PMP_052": "Partner Certificate not available",
        "PMS_PMP_014": "Policy does not exist",
        "PMS_PMS_022": "Given Partner api key is not active.",
        "PMS_PMP_018": "Policy expired.",
        "PMS_PRT_108": "Policy group is Mandatory for Auth_Partner",
        "PMS_AUT_002": "Device provider id not found from the partners list",
        "PMS_AUT_003": "Device Details already exists",
        "PMS_AUT_004": "Duplicate request received",
        "PMS_AUT_005": "Device detail for id %s does not exist",
        "PMS_AUT_025": "ApprovalStatus should be Activate / De_activate;",
        "PMP_AUT_030": "ftp provider not exists.",
        "PMP_AUT_031": "ftp chip id not exists.",
        "PMP_AUT_032": "Given provider,make and model already exists.",
        "PMP_AUT_033": "Certificate is not uploaded.",
        "PMP_AUT_034": "Ftp chip detail id and ftp provider id not mappped. ",
        "PMP_AUT_037": "Given ftp chip details already registered.;",
        "PMS_AUT_007": "Secure Biometric Interface not found for the id %s",
        "PMS_AUT_026": "ApprovalStatus should be Activate / De_activate",
        "PMS_AUT_506": "Provide device details of same provider.",
        "PMS_AUT_507": "ExpiryDate should be greaterthan createdDate",
        "PMS_AUT_508": "ExpiryDate should be greaterthan/equal Today.;",
        "PMS_POL_002": "Mismatch of Policy Manager Credentials",
        "PMS_POL_004": "Policy Name already exists in the policy Group.Name : ",
        "PMS_POL_005": "Unsupported KYC attribute in the Policy File",
        "PMS_POL_006": "Unsupported Authentication Type in the Policy File",
        "PMS_POL_007": "eKYC attribute missing in the policy file",
        "PMS_POL_008": "Policy ID does not exist",
        "PMS_POL_009": "Auth policy exists with name : ",
        "PMS_COR_002": "Invalid Input Parameter _ ",
        "PMS_COR_003": "Could not process the request",
        "PMS_POL_010": " Auth Policies are not defined against to policy",
        "PMS_POL_013": "No policy available for given PartnerAPIKey",
        "PMS_POL_014": "Policy group exists with name : ",
        "PMS_POL_015": "Policy group and policy not mapped.",
        "PMS_POL_016": "Policy Group ID does not exist",
        "PMS_POL_017": "No policy available for given partner",
        "PMS_POL_018": "Given partner and policy are not mapped.",
        "PMS_POL_019": "Policy group name does not exist",
        "PMS_POL_020": "Can not publish the published policy",
        "PMS_POL_021": "allowed auth types are not required for policyType ",
        "PMS_POL_022": "Given auth token type is not allowed",
        "PMS_POL_023": "Given policy type is not allowed ",
        "PMS_POL_045": "Policy Status either Active or De_active.",
        "PMS_POL_046": "Datashare attributes are not required for given policyType ",
        "PMS_POL_047": "Shareable attributes are not required for given policyType ",
        "PMS_POL_048": "AllowedKYC attributes are not required for given policyType ",
        "PMS_POL_050": "The given version is not available.Allowed versions are : ",
        "PMS_POL_051": "Policy Schema and policy are not matching",
        "PMS_POL_052": "Error occured while parsing policy string to json object",
        "PMS_POL_053": "Policy group is not active.",
        "PMS_POL_054": "Cannot activate unpublished policy.",
        "PMS_POL_055": "Published policy cannot be updated.",
        "PMS_POL_056": "Active policies exists under the policy group.",
        "PMS_POL_057": "Active apiKey exists under the policy.",
        "PMS_POL_058": "Status cannot be changed for published policy.;",
        "KER-PCM-006": "Root CA/Intermediate CA Certificates not found.",
        "KER-PCM-015": "Self Signed Certificate not allowed as partner.",
        "KER-PCM-004": "Certificate Dates are not valid.",
        "KER-KMS-013": "Certificate Parsing Error.signed overrun, bytes = 917",
        "PMS_AUT_001": "Reg Device Sub Type Code not found in the list of Reg Device Sub Types",
        "PMS_PV_005": "Invalid input parameter - errorCode in policy data",
        "PMS_PRT_053": "Mapping exists for given policy and partner and is in InProgress state.",
        "PMS_AUT_028": "Device details for id $ID are rejected. Can't use same details for mapping.",
        "PMS_CERTIFICATE_ERROR_001": "Error while fetching partner certificates.",
        "PMS_CERTIFICATE_ERROR_002": "User Id does not exists.",
        "PMS_CERTIFICATE_ERROR_003": "Partner Id is null or empty.",
        "PMS_POLICY_ERROR_001": "Policy Group Name is null or empty.",
        "PMS_POLICY_ERROR_002": "Error while fetching partner policies."
    }
}